{"version":3,"sources":["redditapi.js","index.js"],"names":["search","searchTerm","sortBy","searchLimit","fetch","then","res","json","data","children","console","log","map","alert","catch","err","searchContainer","document","getElementById","searchForm","searchInput","button","querySelector","results","addEventListener","e","preventDefault","innerHTML","value","alertMessage","fetchData","message","className","output","createElement","classList","add","appendChild","createTextNode","insertBefore","disabled","setTimeout","removeChild","cutOffWords","words","num","shortended","indexOf","substring","cards","reddit","forEach","result","image","preview","images","source","url","card","title","selftext","subreddit","score"],"mappings":"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","file":"finddit.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default {\r\n  search: function(searchTerm, sortBy, searchLimit){\r\n    return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.data.children) {\r\n          console.log(data.data.children)\r\n          return data.data.children.map(data => data.data)\r\n        }else{\r\n          console.log(data.data.children)\r\n          alert('没有找到相关结果')\r\n        }        \r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\n// return fetch() 返回一个promise，才能在index.js里继续使用then方法，否则会报错","import reddit from \"./redditapi\";\r\n\r\nlet searchContainer = document.getElementById(\"search-container\");\r\nlet search = document.getElementById(\"search\");\r\nlet searchForm = document.getElementById(\"search-form\");\r\nlet searchInput = document.getElementById(\"search-input\");\r\nlet button = document.querySelector(\"button\");\r\nlet results = document.getElementById(\"results\");\r\n\r\nsearchForm.addEventListener(\"submit\", e => {\r\n  e.preventDefault();\r\n  results.innerHTML = null;\r\n  let searchTerm = searchInput.value;\r\n  let sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n  let searchLimit = document.getElementById(\"limit\").value;\r\n\r\n  if (!searchTerm) {\r\n    alertMessage(\"Please Input Valid Content\", \"alert-danger\");\r\n  }\r\n  // fetch data\r\n  fetchData(searchTerm, sortBy, searchLimit);\r\n});\r\n\r\nsearchInput.addEventListener(\"focus\", e => {\r\n  e.preventDefault();\r\n  searchInput.value = \"\";\r\n});\r\n\r\nfunction alertMessage(message, className) {\r\n  let output = document.createElement(\"div\");\r\n  output.classList.add(\"alert\", className);\r\n  output.appendChild(document.createTextNode(message));\r\n  searchContainer.insertBefore(output, search);\r\n\r\n  // ban button\r\n  button.disabled = \"disabled\";\r\n  setTimeout(() => {\r\n    searchContainer.removeChild(output);\r\n    button.disabled = \"\";\r\n  }, 3000);\r\n}\r\n\r\nfunction cutOffWords(words, num) {\r\n  let shortended = words.indexOf(\" \", num);\r\n  if (shortended === -1) {\r\n    return words;\r\n  }\r\n  return words.substring(0, shortended);\r\n}\r\n\r\nfunction fetchData(searchTerm, sortBy, searchLimit) {\r\n  let cards = document.createElement(\"div\");\r\n  reddit.search(searchTerm, sortBy, searchLimit).then(data => {\r\n    cards.classList.add(\"card-columns\", \"container\");\r\n    data.forEach(result => {\r\n      let image = result.preview\r\n        ? result.preview.images[0].source.url\r\n        : \"https://applets.imgix.net/https%3A%2F%2Fassets.ifttt.com%2Fimages%2Fchannels%2F1352860597%2Ficons%2Fon_color_large.png%3Fversion%3D0?ixlib=rails-2.1.3&w=240&h=240&auto=compress&s=14be39acc55fbe4638b776011273dfd5\";\r\n      let card = `\r\n        <div class=\"card\" style=\"width: 18rem;\">\r\n          <img src= \"${image}\"\" class=\"card-img-top\" alt=\"...\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">${result.title}</h5>\r\n                <p class=\"card-text\">${cutOffWords(result.selftext, 100)}</p>\r\n                  <a href=\"${\r\n                    result.url\r\n                  }\" target=\"_blank\"  class=\"btn btn-primary\">Read More</a>\r\n                  <hr>\r\n                  <span class=\"badge badge-secondary\">Subreddit: ${\r\n                    result.subreddit\r\n                  }</span> \r\n                  <span class=\"badge badge-dark\">Score: ${result.score}</span>\r\n            </div>\r\n        </div>\r\n        `;\r\n      cards.innerHTML += card;\r\n      results.appendChild(cards);\r\n    });\r\n  });\r\n}\r\n"]}